{"version":3,"sources":["api/CoinGeckoApi.js","components/Coin.js","components/CoinList.js","pages/CoinMainPage.js","chartConfigs/ChartConfigs.js","components/CoinChart.js","pages/CoinDetailPage.js","App.js","reportWebVitals.js","index.js"],"names":["axios","create","baseURL","Coin","coin","to_jpy","Number","current_price","toLocaleString","style","currency","to","id","className","src","image","alt","name","price_change_percentage_24h","CoinList","useState","coins","setCoins","isLoading","setIsLoading","availableCoins","useEffect","a","CoinGeckoApi","get","params","vs_currency","ids","join","response","data","fetchData","map","CoinMainPage","chartOptions","legend","labels","fontSize","fontColor","lineHeightAnnotation","always","hover","lineWeight","animation","duration","maintainAspectRatio","responsive","scales","xAxes","type","distribution","gridLines","color","zeroLineColor","yAxes","CoinChart","chartRef","useRef","timeFormat","setTimeFormat","day","week","year","detail","determineTimeFormat","current","console","log","Chartjs","datasets","label","backgroundColor","borderColor","pointRadius","options","price_change_24h","toFixed","renderPrice","ref","width","height","onClick","CoinDetailPage","useParams","coinData","setCoinData","formatData","el","t","y","Promise","all","days","prices","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1369a030.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://api.coingecko.com/api/v3\",\n});\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Coin = ({ coin }) => {\n  const to_jpy = Number(coin.current_price).toLocaleString(\"ja-JP\", {\n    style: \"currency\",\n    currency: \"JPY\",\n  });\n\n  //   console.log(to_jpy);\n\n  return (\n    <Link to={`/coins/${coin.id}`} className=\"text-decoration-none\">\n      <li className=\"coinlist-item list-group-item d-flex justify-content-between align-items-center text-white mb-1 rounded\">\n        <img className=\"coinlist-image\" src={coin.image} alt=\"\" />\n\n        <span className=\"coinlist-price coin-name text-light\">{coin.name}</span>\n\n        <span className=\"coinlist-price\">{to_jpy}</span>\n\n        <span\n          className={\n            coin.price_change_percentage_24h < 0\n              ? \"text-danger mr-2 coinlist-price\"\n              : \"text-success mr-2 coinlist-price\"\n          }\n        >\n          {\" \"}\n          {coin.price_change_percentage_24h < 0 ? (\n            <i className=\"fas fa-sort-down align-middle mr-1\"></i>\n          ) : (\n            <i className=\"fas fa-sort-up align-middle mr-1\"></i>\n          )}\n          {coin.price_change_percentage_24h}\n        </span>\n      </li>\n    </Link>\n  );\n};\n\nexport default Coin;\n","import React, { useState, useEffect } from \"react\";\nimport CoinGeckoApi from \"../api/CoinGeckoApi\";\nimport Coin from \"./Coin\";\n\nconst CoinList = () => {\n  const [coins, setCoins] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const availableCoins = [\n    \"bitcoin\",\n    \"ethereum\",\n    \"tether\",\n    \"cardano\",\n    \"ripple\",\n    \"litecoin\",\n    \"bitcoin-cash\",\n    \"eos\",\n    \"tezos\",\n    \"okb\",\n  ];\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      const response = await CoinGeckoApi.get(\"/coins/markets/\", {\n        params: {\n          vs_currency: \"jpy\",\n          ids: availableCoins.join(\",\"),\n        },\n      });\n      setCoins(response.data);\n      setIsLoading(false);\n    };\n    fetchData();\n  }, []);\n\n  const renderCoins = () => {\n    if (isLoading) {\n      return (\n        <div className=\"text-white m-3\">\n          <h3 className=\"text-center\">読み込み中です。。。</h3>\n        </div>\n      );\n    }\n    return (\n      <ul className=\"list-group\">\n        {coins.map((coin) => {\n          return <Coin key={coin.id} coin={coin} />;\n        })}\n      </ul>\n    );\n  };\n  return <div>{renderCoins()}</div>;\n};\n\nexport default CoinList;\n","import React from 'react'\nimport CoinList from '../components/CoinList'\n\nconst CoinMainPage = () => {\n    return (\n        <div className=\"coin-list mx-auto rounded\">\n            <CoinList />\n        </div>\n    )\n}\nexport default CoinMainPage\n","export const chartOptions = {\n  legend: {\n    labels: {\n      fontSize: 17,\n      fontColor: \"#bbbbbb\",\n    },\n    lineHeightAnnotation: {\n      always: true,\n      hover: false,\n      lineWeight: 1,\n    },\n  },\n  animation: {\n    duration: 2000,\n  },\n  maintainAspectRatio: false,\n  responsive: true,\n  scales: {\n    xAxes: [\n      // X軸設定\n      {\n        type: \"time\",\n        distribution: \"linear\",\n        gridLines: {\n          color: \"#222222\",\n          zeroLineColor: \"#222222\",\n        },\n      },\n    ],\n    yAxes: [\n      // Ｙ軸設定\n      {\n        gridLines: {\n          color: \"#333333\",\n          zeroLineColor: \"#333333\",\n        },\n      },\n    ],\n  },\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport Chartjs from \"chart.js\";\nimport { chartOptions } from \"../chartConfigs/ChartConfigs\";\n\nconst CoinChart = ({ data }) => {\n  const chartRef = useRef();\n  const [timeFormat, setTimeFormat] = useState(\"24h\");\n  const { day, week, year, detail } = data;\n\n  const determineTimeFormat = () => {\n    switch (timeFormat) {\n      case \"24h\":\n        return day;\n      case \"7d\":\n        return week;\n      case \"1y\":\n        return year;\n      default:\n        return day;\n    }\n  };\n\n\n  useEffect(() => {\n    if (chartRef && chartRef.current && detail) {\n      console.log(\"ok\");\n      const chartInstance = new Chartjs(chartRef.current, {\n        type: \"line\",\n        data: {\n          datasets: [\n            {\n              label: detail.name,\n              data: determineTimeFormat(),\n              backgroundColor: \"transparent\",\n              borderColor: \"red\",\n              pointRadius: 0,\n            },\n          ],\n        },\n        options: {\n          ...chartOptions,\n        },\n      });\n    }\n  });\n\n  const renderPrice = () => {\n    if (detail) {\n      const to_jpy = Number(detail.current_price).toLocaleString(\"ja-JP\", {\n        style: \"currency\",\n        currency: \"JPY\",\n      });\n\n      console.log(detail.current_price);\n      return (\n        <>\n          <p className=\"chart-price my-0 text-white\">{to_jpy}</p>\n          <p\n            className={\n              detail.price_change_24h < 0\n                ? \"text-danger my-0\"\n                : \"text-success my-0\"\n            }\n          >\n            {detail.price_change_percentage_24h.toFixed(2)}%\n          </p>\n        </>\n      );\n    }\n  };\n\n  return (\n    <div className=\"text-white border mt-2 rounded p-3\">\n      <div className=\"text-end\">{renderPrice()}</div>\n\n      <div>\n        <canvas ref={chartRef} id=\"myChart\" width={200} height={400}></canvas>\n      </div>\n      <div className=\"text-end mt-2\">\n        <button\n          onClick={() => setTimeFormat(\"24h\")}\n          className=\"btn btn-outline-secondary btn-sm\"\n        >\n          24h\n        </button>\n        <button\n          onClick={() => setTimeFormat(\"7d\")}\n          className=\"btn btn-outline-secondary btn-sm mx-2\"\n        >\n          7d\n        </button>\n        <button\n          onClick={() => setTimeFormat(\"1y\")}\n          className=\"btn btn-outline-secondary btn-sm\"\n        >\n          1y\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default CoinChart;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport CoinChart from \"../components/CoinChart\";\nimport CoinGeckoApi from \"../api/CoinGeckoApi\";\n\nconst CoinDetailPage = () => {\n  const { id } = useParams();\n  const [coinData, setCoinData] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  const formatData = (data) => {\n    return data.map((el) => {\n      return {\n        t: el[0],\n        y: el[1].toFixed(2),\n      };\n    });\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      const [day, week, year, detail] = await Promise.all([\n        CoinGeckoApi.get(`/coins/${id}/market_chart/`, {\n          params: {\n            vs_currency: \"jpy\",\n            days: \"1\",\n          },\n        }),\n        CoinGeckoApi.get(`/coins/${id}/market_chart/`, {\n          params: {\n            vs_currency: \"jpy\",\n            days: \"7\",\n          },\n        }),\n        CoinGeckoApi.get(`/coins/${id}/market_chart/`, {\n          params: {\n            vs_currency: \"jpy\",\n            days: \"365\",\n          },\n        }),\n        CoinGeckoApi.get(\"/coins/markets/\", {\n          params: {\n            vs_currency: \"jpy\",\n            ids: id,\n          },\n        }),\n      ]);\n      console.log(day);\n\n      setCoinData({\n        day: formatData(day.data.prices),\n        week: formatData(week.data.prices),\n        year: formatData(year.data.prices),\n        detail: detail.data[0],\n      });\n      setIsLoading(false);\n    };\n    fetchData();\n  }, []);\n\n  const renderData = () => {\n    if (isLoading) {\n      return (\n        <div className=\"text-white m-3\">\n          <h3 className=\"text-center\">読み込み中です。。。</h3>\n        </div>\n      );\n    }\n    return <CoinChart data={coinData} />;\n  };\n\n  return renderData();\n};\n\nexport default CoinDetailPage;\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport CoinMainPage from \"./pages/CoinMainPage\";\nimport CoinDetailPage from \"./pages/CoinDetailPage\";\n\nfunction App() {\n  return (\n    <div className=\"container mt-5\">\n      <BrowserRouter>\n        <Route exact path=\"/\" component={CoinMainPage} />\n        <Route path=\"/coins/:id\" component={CoinDetailPage} />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}